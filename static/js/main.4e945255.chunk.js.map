{"version":3,"sources":["utils/fetchImg.js","utils/fetchData.js","App.js","index.js"],"names":["fetchImg","a","fetch","fetchedData","status","Error","statusText","json","res","console","error","message","fetchData","arr","i","gender","faker","random","arrayElement","name","firstName","city","address","breed","animal","cat","age","datatype","number","push","App","useState","catImgArr","setCatImgArr","catDataArr","setCatDataArr","useEffect","data","imgs","map","id","className","alt","src","url","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAMA,G,MAAQ,uCAAG,8BAAAC,EAAA,+EAEaC,MACxB,mHAHW,UAKc,OAHrBC,EAFO,QAKGC,OALH,sBAML,IAAIC,MAAJ,UAAaF,EAAYC,OAAzB,cAAqCD,EAAYG,aAN5C,uBAQKH,EAAYI,OARjB,cAQPC,EARO,yBAUNA,GAVM,kCAYbC,QAAQC,MAAR,mCAAsB,KAAIC,UAZb,0DAAH,sDAgBCX,I,gBCKAY,EAnBG,WAGhB,IAFA,IAAMC,EAAM,GAEHC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IACMC,EAASC,IAAMC,OAAOC,aADZ,CAAC,OAAQ,WAGnBC,EAAOH,IAAMG,KAAKC,UAAUL,GAE5BM,EAAOL,IAAMM,QAAQD,OACrBE,EAAQP,IAAMQ,OAAOC,MACrBC,EAAMV,IAAMW,SAASC,OAAO,IAElCf,EAAIgB,KAAK,CAAEV,OAAMJ,SAAQM,OAAME,QAAOG,QAGxC,OAAOb,G,OCgBMiB,EA7BH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAYA,OAVAC,qBAAU,WACR,sBAAC,8BAAAnC,EAAA,6DACOoC,EAAOzB,IADd,SAEoBZ,IAFpB,OAEOsC,EAFP,OAICL,EAAaK,GACbH,EAAcE,GALf,0CAAD,KAOC,IAGD,mCACE,gCACE,0CACCL,EAAUO,KAAI,SAACd,EAAKX,GAAN,aACb,sBAAK0B,GAAIf,EAAIe,GAAb,UACE,qBAAKC,UAAU,MAAMC,IAAI,GAAGC,IAAKlB,EAAImB,MACrC,yCAAOV,EAAWpB,UAAlB,aAAO,EAAeK,SAFFM,EAAIe,aCnBpCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4e945255.chunk.js","sourcesContent":["const fetchImg = async () => {\r\n  try {\r\n    const fetchedData = await fetch(\r\n      'https://api.thecatapi.com/v1/images/search?mime_types=jpg&limit=20&api_key=2ab73ab1-f5ca-4a8a-bf86-25e64a0f6abf'\r\n    );\r\n    if (fetchedData.status !== 200)\r\n      throw new Error(`${fetchedData.status} - ${fetchedData.statusText}`);\r\n\r\n    const res = await fetchedData.json();\r\n\r\n    return res;\r\n  } catch (err) {\r\n    console.error(`ðŸ’¥ðŸ’¥ ${err.message}`);\r\n  }\r\n};\r\n\r\nexport default fetchImg;\r\n","import faker from 'faker';\r\n\r\nconst fetchData = () => {\r\n  const arr = [];\r\n\r\n  for (let i = 0; i < 20; i++) {\r\n    const genders = ['male', 'female'];\r\n    const gender = faker.random.arrayElement(genders);\r\n\r\n    const name = faker.name.firstName(gender);\r\n\r\n    const city = faker.address.city();\r\n    const breed = faker.animal.cat();\r\n    const age = faker.datatype.number(20);\r\n\r\n    arr.push({ name, gender, city, breed, age });\r\n  }\r\n\r\n  return arr;\r\n};\r\n\r\nexport default fetchData;\r\n","import { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport fetchImg from './utils/fetchImg';\r\nimport fetchData from './utils/fetchData';\r\n\r\nconst App = () => {\r\n  const [catImgArr, setCatImgArr] = useState([]);\r\n  const [catDataArr, setCatDataArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const data = fetchData();\r\n      const imgs = await fetchImg();\r\n\r\n      setCatImgArr(imgs);\r\n      setCatDataArr(data);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Cats4Lyf</h1>\r\n        {catImgArr.map((cat, i) => (\r\n          <div id={cat.id} key={cat.id}>\r\n            <img className=\"img\" alt=\"\" src={cat.url} />\r\n            <span>{catDataArr[i]?.name}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}